@using System.Security.Cryptography
@model DeviceFolderViewModel

@* <div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-1">
            <h2 class="custom-header text-white mt-4">Файловая система устройства</h2>
            <div class="card">
                <div class="card-body">
                    <table id="folder" class="table table-hover table-bordered">
                        <thead>
                            <tr>
                                <th>Тип</th>
                                <th>Название</th>
                                <th>Дата создания</th>
                                <th>Дата изменения</th>
                                <th>Размер</th>
                                <th>Скачать</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr></tr>
                            <tr></tr>
                            <tr></tr>
                            <tr></tr>
                            <tr></tr>
                            <tr>
                                <td colspan="6" class="text-center" id="folderLoader">
                                    <div class="spinner-border text-dark" style="width: 3rem; height: 3rem"></div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <form id="fileForm" hidden action='/api/deviceapi/DownloadFileForServer' method='post'>
        <input id="deviceId" name="deviceId" value="@Model.UserDevice.DeviceId" />
        <input id="filePath" name="path" />       
    </form>

    <form id="dirForm" hidden action='/api/deviceapi/DownloadDirectoryForServer' method='post'>
        <input id="deviceId" name="deviceId" value="@Model.UserDevice.DeviceId" />
        <input id="dirPath" name="path" />
    </form>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            loadDir("@Model.Path") // window.location.pathname
            window.addEventListener('popstate', function (event) {
                loadDir(window.location.pathname.split("/").slice(3).join("/"))
            });
            let table = new DataTable('#folder')
        })

        function GetFormData(path) {
            if (path[0] != '/') {
                path = "/" + path
            }

            var data = new FormData()
            data.append("deviceId", "@Model.UserDevice.DeviceId")
            data.append("path", "root" + path)
            return data
        }

        function loadDir(path) {
            $("#folder tbody tr.clickableRow").remove()
            $("#folder #folderLoader").removeClass("d-none")

            $.ajax({
                url: "/api/deviceapi/GetNestedFilesInfoInDirectoryForServer",
                method: "post",
                contentType: false,
                processData: false,
                data: GetFormData(path),
                success: function (data) {
                    console.log(data.nestedDirectoriesInfo)
                    console.log(data.nestedFilesInfo)
                    if (data.nestedDirectoriesInfo != null) {
                        data.nestedDirectoriesInfo.forEach(fillRow)
                    }
                    if (data.nestedFilesInfo != null) {
                        data.nestedFilesInfo.forEach(fillRow)
                    }

                    $("#folder #folderLoader").addClass("d-none")

                    $(".directoryRow").dblclick(function (e) {
                        if ($(e.target).prop("tagName") != "TD") {
                            return;
                        }

                        var dir = ($($(this).children("td")[1]).text())
                        var newPath = path + dir + "/"
                        var addedDeviderForLocation = ""
                        if (window.location.pathname[0] != "/") {
                            addedDeviderForLocation = "/"   
                        }                        

                        console.log(newPath)
                        window.history.pushState("", "", window.location.pathname + addedDeviderForLocation + dir + "/")
                        loadDir(newPath)
                    })

                    $(".downloadBtn").click(function () {
                        var curBtn = $(this)
                        curBtn.attr("disabled", "disabled")
                        var name = $($(this).parent().parent().children('td')[1]).text()
                        newPath = takePath(path, name)
                        if ($(this).parent().parent().hasClass("directoryRow")) {
                            $("#dirPath").val(newPath)
                            $("#dirForm").submit()
                            return
                        }
                        
                        $("#filePath").val(newPath)
                        $("#fileForm").submit()
                    })
                },
                error: function (jqXHR, exception) {
                    console.log(jqXHR)
                    console.log(exception)
                    $("#folder #folderLoader").addClass("d-none")
                }
            });
        }

        function takePath(oldPath, name) {
            var newPath = oldPath + name;
            if (newPath[0] != '/') {
                newPath = "/" + newPath
            }

            newPath = "root" + newPath
            return newPath;
        }

        function fillRow(d) {
            $("#folder > tbody").append
                ("<tr class='clickableRow " + (d.size == undefined ? "directoryRow" : "fileRow") + "'>" +
                    "<td class='text-center'><i class='" + (d.size == undefined ? "fa fa-folder-open-o" : "fa fa-file-o") + "'></td>" +
                    "<td class='text-center'>" + d.name + "</td>" +
                    "<td class='text-center'>" + d.creationDate + "</td>" +
                    "<td class='text-center'>" + d.changingDate + "</td>" +
                    "<td class='text-center'>" + (d.size == undefined ? "-" : d.size) + "</td>" +
                    "<td class='text-center'><button class='btn downloadBtn'><i class='fa fa-download'></i></button></td>" +
                    "</tr>")
        }       
    </script>
} *@



<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <table class="table table-hover" id="folder">
                        <thead>
                            <tr>
                                <th>Имя</th>
                                <th>Дата создания</th>
                                <th>Дата изменения</th>
                                <th>Размер Мб</th>
                                <th>Действие</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td colspan="5" class="text-center" id="folderLoader">
                                    <div class="spinner-border text-dark" style="width: 5rem; height: 5rem"></div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <form id="fileForm" hidden action='/api/deviceapi/DownloadFileForServer' method='post'>
            <input id="deviceId" name="deviceId" value="@Model.UserDevice.DeviceId" />
            <input id="filePath" name="path" />
        </form>

        <form id="dirForm" hidden action='/api/deviceapi/DownloadDirectoryForServer' method='post'>
            <input id="deviceId" name="deviceId" value="@Model.UserDevice.DeviceId" />
            <input id="dirPath" name="path" />
        </form>
    </div>
</div>
    @section Scripts
    {
    <script>
        $(document).ready(function () {
            loadDir("@Model.Path") // window.location.pathname
            window.addEventListener('popstate', function (event) {
                loadDir(window.location.pathname.split("/").slice(3).join("/"))
            });
        })

        function GetFormData(path) {
            if (path[0] != '/') {
                path = "/" + path
            }

            var data = new FormData()
            data.append("deviceId", "@Model.UserDevice.DeviceId")
            data.append("path", "root" + path)
            return data
        }

        function loadDir(path) {
            $("#folder tbody tr.clickableRow").remove()
            $("#folder #folderLoader").removeClass("d-none")

            $.ajax({
                url: "/api/deviceapi/GetNestedFilesInfoInDirectoryForServer",
                method: "post",
                contentType: false,
                processData: false,
                data: GetFormData(path),
                success: function (data) {
                    console.log(data.nestedDirectoriesInfo)
                    console.log(data.nestedFilesInfo)
                    if (data.nestedDirectoriesInfo != null) {
                        data.nestedDirectoriesInfo.forEach(fillRow)
                    }
                    if (data.nestedFilesInfo != null) {
                        data.nestedFilesInfo.forEach(fillRow)
                    }

                    $("#folder #folderLoader").addClass("d-none")

                    $(".directoryRow").dblclick(function (e) {
                        if ($(e.target).prop("tagName") != "TD") {
                            return;
                        }

                        var dir = ($($(this).children("td")[0]).text())
                        var newPath = path + "/" + dir + "/"
                        var addedDeviderForLocation = ""
                        if (window.location.pathname[0] != "/") {
                            addedDeviderForLocation = "/"
                        }

                        console.log(newPath)
                        window.history.pushState("", "", window.location.pathname + addedDeviderForLocation + dir + "/")
                        loadDir(newPath)
                    })

                    $(".downloadBtn").click(function () {
                        var curBtn = $(this)
                        curBtn.attr("disabled", "disabled")
                        var name = $($(this).parent().parent().children('td')[0]).text()
                        newPath = takePath(path, name)
                        if ($(this).parent().parent().hasClass("directoryRow")) {
                            $("#dirPath").val(newPath)
                            $("#dirForm").submit()
                            return
                        }

                        $("#filePath").val(newPath)
                        $("#fileForm").submit()
                    })
                },
                error: function (jqXHR, exception) {
                    console.log(jqXHR)
                    console.log(exception)
                    $("#folder #folderLoader").addClass("d-none")
                }
            });
        }

        function takePath(oldPath, name) {
            var newPath = oldPath + name;
            if (newPath[0] != '/') {
                newPath = "/" + newPath
            }

            newPath = "root" + newPath
            return newPath;
        }

        function fillRow(d) {
            $("#folder > tbody").append
                ("<tr class='clickableRow " + (d.size == undefined ? "directoryRow" : "fileRow") + "'>" +
                    "<td>" + d.name + "</td>" +
                    "<td>" + d.creationDate + "</td>" +
                    "<td>" + d.changingDate + "</td>" +
                    "<td>" + (d.size == undefined ? "" : d.size) + "</td>" +
                    "<td>" + "<button class='btn btn-dark downloadBtn'>Скачать</button>" + "</td>" +
                    "</tr>")
        }
    </script>
}
